<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.zqh.spark.connectors</groupId>
        <artifactId>spark-connectors</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.zqh.spark.connectors</groupId>
    <artifactId>connectors-snappydata</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <snappy-spark.version>2.0.1-3</snappy-spark.version>
        <snappy.version>0.6.1</snappy.version>
        <avro.version>1.7.7</avro.version>
    </properties>

    <dependencies>
        <!--
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
        </dependency>
        -->

        <dependency>
            <groupId>io.snappydata</groupId>
            <artifactId>snappydata-core_${scala.binary.version}</artifactId>
            <version>${snappy.version}</version>
        </dependency>
        <dependency>
            <groupId>io.snappydata</groupId>
            <artifactId>snappydata-cluster_${scala.binary.version}</artifactId>
            <version>${snappy.version}</version>
        </dependency>
        <dependency>
            <groupId>io.snappydata</groupId>
            <artifactId>snappy-spark-core_2.11</artifactId>
            <version>${snappy-spark.version}</version>
        </dependency>
        <dependency>
            <groupId>io.snappydata</groupId>
            <artifactId>snappy-spark-sql_2.11</artifactId>
            <version>${snappy-spark.version}</version>
        </dependency>
        <dependency>
            <groupId>io.snappydata</groupId>
            <artifactId>snappy-spark-streaming_2.11</artifactId>
            <version>${snappy-spark.version}</version>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.3</version>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.javaewah</groupId>
            <artifactId>JavaEWAH</artifactId>
            <version>1.1.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>0.8.2.2</version>
        </dependency>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>algebird-core_2.11</artifactId>
            <version>0.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>connectors-core</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/test/avro</sourceDirectory>
                            <outputDirectory>${project.basedir}/target/generated-sources/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>